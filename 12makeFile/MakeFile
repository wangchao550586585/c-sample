#默认只会执行第一个目标,可设置执行的最终目标是hello
ALL:hello
#目标,依赖条件hello.c
hello:hello.c
	#tab缩进,执行命令
	gcc hello.c -o hello

#------------------------------2个函数
#匹配当前目录下所有.c结尾文件,将文件名字组成列表,给src
src=$(wildcard ./*.c)
#将src中所有.c结尾替换为.o
obj=$(patsubst %.c,%.o,$(src))
hello:$(src)
	gcc $(src) -o hello

#------------------------------伪目标
#可通过 make clean直执行当前命令, 添加 -n假删除
clean:
	-rm -rf $(src)
#因为clean没有依赖条件,再次不会执行
#设置伪目标,不管条件是否满足,目标都执行
.PHONY: clean ALL



#------------------------------自动变量
# $@:表示规则中目标
# $^:在规则的命令中,表示所有依赖条件
# $<:在规则的命令中,表示第一个依赖条件

hello:$(src)
# $^表示依赖条件$(src) ,这里$<也可以,因为只有一个依赖条件
# $@表示目标hello
	gcc $^ -o $@

#------------------------------模式规则
hello1.o:hello2.c
	gcc -c $< -o $@
hello2.o:hello2.c
	gcc -c $< -o $@
#可直接变成
%.o:%.c
	gcc -c $< -o $@

#------------------------------静态模式规则
#当出现多个规则构造.c,则容易出现混淆,可设置$(obj)模式规则用这个
$(obj):%.o:%.c
	gcc -c $< -o $@

hello2:$(obj)
	gcc -s $< -o $@
